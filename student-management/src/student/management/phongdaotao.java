/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package student.management;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import sun.misc.REException;

/**
 *
 * @author Huy Cuong
 */
public class phongdaotao extends javax.swing.JFrame {

    /**
     * Creates new form phongdaotao
     */
    public phongdaotao() {
        initComponents();
        myCustomInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSubject = new javax.swing.JTable();
        btn_addSubject = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        openOffering = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableOffering = new javax.swing.JTable();
        btn_editOffering = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableFaculty = new javax.swing.JTable();
        btnAddFaculty = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                load_Subject_hocphan_khoa(evt);
            }
        });

        tableSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã môn", "Tên môn", "Số tín chỉ", "Khoa quản lý", "Mã môn học trước", "Hệ số điểm quá trình", "Hệ số điểm giữa kì", "Hệ số điểm cuối kì", "Hệ số điểm thực hành"
            }
        ));
        jScrollPane1.setViewportView(tableSubject);

        btn_addSubject.setText("Thêm môn học");
        btn_addSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addSubjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_addSubject)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                .addComponent(btn_addSubject)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Quản lý môn học", jPanel1);

        openOffering.setText("Mở học phần");
        openOffering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openOfferingActionPerformed(evt);
            }
        });

        tableOffering.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã học phần", "Mã môn học", "Mã giảng viên", "Sĩ số lớp", "Học kỳ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableOffering);

        btn_editOffering.setText("Chỉnh sửa");
        btn_editOffering.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editOfferingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_editOffering)
                        .addGap(18, 18, 18)
                        .addComponent(openOffering)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openOffering)
                    .addComponent(btn_editOffering))
                .addGap(37, 37, 37))
        );

        jTabbedPane3.addTab("Quản lý học phần", jPanel2);

        tableFaculty.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khoa", "Tên khoa", "Trưởng khoa", "Ngày thành lập"
            }
        ));
        jScrollPane2.setViewportView(tableFaculty);

        btnAddFaculty.setText("Thêm khoa");
        btnAddFaculty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFacultyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(295, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddFaculty)
                .addGap(306, 306, 306))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(btnAddFaculty)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Quản lý khoa", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void myCustomInit() {

        tableSubject.setDefaultEditor(Object.class, null);
        tableFaculty.setDefaultEditor(Object.class, null);
        tableOffering.setDefaultEditor(Object.class, null);

        //setup event select one row table subject
        ListSelectionModel cellSelectionModelSubject = tableSubject.getSelectionModel();
        cellSelectionModelSubject.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModelSubject.addListSelectionListener((ListSelectionEvent e) -> {

            int[] selectedRow = tableSubject.getSelectedRows();
            String selectedSubject = (String) tableSubject.getValueAt(selectedRow[0], 0);
            CONST.choosingSubjectID = selectedSubject;

        });

        //setup event select one row table faculty
        ListSelectionModel cellSelectionModelFaculty = tableFaculty.getSelectionModel();
        cellSelectionModelFaculty.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModelFaculty.addListSelectionListener((ListSelectionEvent e) -> {

            int[] selectedRow = tableFaculty.getSelectedRows();
            String selectedFaculty = (String) tableFaculty.getValueAt(selectedRow[0], 0);
            CONST.choosingFacultyID = selectedFaculty;

        });

        //setup event select one row offering
        ListSelectionModel cellSelectionModelOffering = tableOffering.getSelectionModel();
        cellSelectionModelOffering.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModelOffering.addListSelectionListener((ListSelectionEvent e) -> {

            int[] selectedRow = tableOffering.getSelectedRows();
            String selectedOffering = (String) tableOffering.getValueAt(selectedRow[0], 0);
            CONST.choosingOffering = selectedOffering;

        });
    }

    void clearTable() {
        try {
            DefaultTableModel dtmSubject = (DefaultTableModel) tableSubject.getModel();
            //DefaultTableModel dtmHP = (DefaultTableModel) .getModel();
            DefaultTableModel dtmFaculty = (DefaultTableModel) tableFaculty.getModel();
            
            DefaultTableModel dtmOffering = (DefaultTableModel) tableOffering.getModel();

            dtmSubject.setRowCount(0);
            dtmFaculty.setRowCount(0);
            dtmOffering.setRowCount(0);

        } catch (Exception e) {
            System.out.println("errror clear table");
            System.out.println(e);
        }

    }

    void loadSubjects() {
        DBConnection connection = new DBConnection();

        try {

            connection.connect();
            Statement stmt = DBConnection.con.createStatement();
            ResultSet result = stmt.executeQuery("select subjectid,subjectname,numberofcredits,facultyname,previoussubject,hesodiemqt,hesodiemgk,hesodiemth,hesodiemck from subject,faculty where faculty.facultyid=subject.facultyid");

            while (result.next()) {

                DefaultTableModel model = (DefaultTableModel) tableSubject.getModel();
                model.addRow(new Object[]{
                    result.getString("subjectid"),
                    result.getString("subjectname"),
                    result.getString("numberofcredits"),
                    result.getString("facultyname"),
                    result.getString("previoussubject"),
                    result.getString("hesodiemqt"),
                    result.getString("hesodiemgk"),
                    result.getString("hesodiemth"),
                    result.getString("hesodiemck")
                });
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        connection.disconnect();
    }

    void loadHocphan() {

        DBConnection connection = new DBConnection();
        try {

            connection.connect();

            ResultSet result = connection.query("select *from offering");

            while (result.next()) {

                DefaultTableModel model = (DefaultTableModel) tableOffering.getModel();
                model.addRow(new Object[]{
                    result.getString("offeringid"),
                    result.getString("subjectid"),
                    result.getString("subjectid"),
                    result.getString("slot"),
                    result.getString("semester")
                });
            }

        } catch (Exception e) {

            System.out.println("load offering err");
            System.out.println(e);
        }

        connection.disconnect();
    }

    void loadFaculty() {
        DBConnection connection = new DBConnection();
        try {

            connection.connect();

            ResultSet result = connection.query("select facultyid,facultyname,dean,openeddate from faculty");

            while (result.next()) {

                DefaultTableModel model = (DefaultTableModel) tableFaculty.getModel();
                model.addRow(new Object[]{
                    result.getString("facultyid"),
                    result.getString("facultyname"),
                    result.getString("dean"),
                    result.getString("openeddate")
                });
            }

        } catch (Exception e) {

            System.out.println("load faculty err");
            System.out.println(e);
        }

        connection.disconnect();
    }
    private void load_Subject_hocphan_khoa(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_load_Subject_hocphan_khoa

        clearTable();

        loadSubjects();

        loadHocphan();

        loadFaculty();

    }//GEN-LAST:event_load_Subject_hocphan_khoa

    private void btnAddFacultyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFacultyActionPerformed
        new addFacultyForm().setVisible(true);
    }//GEN-LAST:event_btnAddFacultyActionPerformed

    private void btn_addSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addSubjectActionPerformed
        new addSubjectForm().setVisible(true);
    }//GEN-LAST:event_btn_addSubjectActionPerformed

    private void openOfferingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openOfferingActionPerformed
        new openOfferingForm().setVisible(true);
    }//GEN-LAST:event_openOfferingActionPerformed

    private void btn_editOfferingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editOfferingActionPerformed

        loadOfferingDetailToOfferingForm(CONST.choosingOffering);
    }//GEN-LAST:event_btn_editOfferingActionPerformed

    void loadOfferingDetailToOfferingForm(String id) {
        
        updateOfferingForm updateForm =new updateOfferingForm();
        updateForm.setVisible(true);

        DBConnection connection = new DBConnection();

        try {

            connection.connect();

            ResultSet result = connection.query("select*from offering where offeringid = '" + id + "' ");

            while (result.next()) {
                System.out.println(result.getString("subjectid"));
                updateForm.setLectureID(result.getString("lectureid"));
                updateForm.setAmount(Integer.toString(result.getInt("slot")));
            }

            connection.disconnect();

        } catch (Exception e) {

            System.out.println("err load  offering detail to form " + e);
        }

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFaculty;
    private javax.swing.JButton btn_addSubject;
    private javax.swing.JButton btn_editOffering;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JButton openOffering;
    private javax.swing.JTable tableFaculty;
    private javax.swing.JTable tableOffering;
    private javax.swing.JTable tableSubject;
    // End of variables declaration//GEN-END:variables
}
